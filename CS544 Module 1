CS544 Module 1 Assignment
Part1) 
The following sample data shows the scores of the students in an exam: 58, 52, 93, 55, 54, 99, 68, 69, 98, 70
Using R, assign the above data as a vector in the same order to a variable, say, scores. Do the following using R:
a) How many students took the exam? Using indexing, show the expression for accessing the middle two items. The code should work for a vector of any size. You can assume there are an even number of values.
Sample output:
[1] 10
[1] 54 99
b) Use median(scores) to show the median of the data. Using comparison operators, write the expression for scores less than the median of the data.
Sample output:
[1] 68.5
[1] TRUE TRUE FALSE TRUE TRUE FALSE TRUE FALSE FALSE FALSE
c) Using logical indexing and the expression from b), show all the scores that are less than the median value of the data. Similarly, show all the scores that are greater than or equal to the median.
Sample output:
[1] 58 52 55 54 68 [1] 93 99 69 98 70
d) Using logical indexing with TRUE and FALSE values, show the odd indexed values from the scores. The code should work for any size input data. You can assume that there are even number of values in scores.
Sample output:
[1] 58 93 54 68 98
e) Using the paste function with LETTERS, show the code for the following output. The code should not hardcode the value 10 for the number of scores.
Sample output:
[1] "A=58" "B=52" "C=93" "D=55" "E=54" "F=99" "G=68" "H=69" "I=98" "J=70"
f) Create a matrix of size 5 x 2 using the scores data. The first five values belong to the first column of the matrix. Assign the result to the variable, scores.matrix, and display the result.
Sample output:
[,1] [,2]
[1,] 58 99
[2,] 52 68
[3,] 93 69
[4,] 55 98
[5,] 54 70
g) Show the code for displaying the first and last rows of the matrix. The code should work for any size matrix.
Sample output:
[,1] [,2] [1,] 58 99 [2,] 54 70
h) Assign row names for the scores.matrix as Student1, Student2,... and column names as Quiz1 and Quiz2. The code should work for any size matrix, i.e., for any number of rows in the matrix with two columns.
Sample output:
Quiz1 Quiz2 Student1 58 99 Student2 52 68 Student3 93 69 Student4 55 98 Student5 54 70
Part 2) 
Create a data frame, say weather.info, using the column names: Month, Monthly_Average, Daily_Max_Average, Daily_Min_Average, Record_High, and Record_Low. A snapshot of the resulting data frame with the required data is shown below:
a) Show the code for creating the above data frame and display the resulting data frame.
 
b) Show the summary for Monthly_Avg, DailyMax_Avg, DailyMin_Avg, Record_High, and Record_Low.
c) Show the data frame sliced using the columns Month, Record_High, and Record_Low. d) Show the data frame sliced using the first and last row. Do not hard code 12 in the
expression, i.e., the code should work for a data frame of any size.
e) Show all rows of the data frame whose DailyMax_Avg is greater than 40.
f) Modify the data by adding a new column, Record_Deviation, showing the difference between the Record_High and Record_Low. Display the new resulting data frame.

scores<-c(58,52,93,55,54,99,68,69,98,70)

Part1
###a)

length(scores)
scores[c(length(scores)/2,length(scores)/2+1)]

###b)
median(scores)
scores < median(scores)

###c)
scores[scores<median(scores)]
scores[scores>median(scores)]

###d)
scores[scores%%2==0]

###e)
paste(toupper(letters)[1:10],sep="=",scores)

###f)
matrix(scores,5,2)

###g)
rbind(matrix(scores,5,2)[col=1,],matrix(scores,5,2)[col=5,])

###h)
rownames = c("Student1", "Student2","Student3","Student4","Student5")
colnames = c("Quiz1","Quiz2")
matrix(scores,5,2,dimnames = list(rownames, colnames))


Part2

###a)
a = data.frame(
   Month = month.name, 
   Monthly_Average = c(4.1,6.1,12.8,23.9,35.5,45.0,49.1,48.1,41.6,30.2,20.7,10.1),
   Daily_Max_Average = c(13.6,14.7,20.7,30.4,41.3,50.4,54.1,53.3,47.1,36.4,28.1,184), 
   Daily_Min_Average = c(-4.1,-2.4,5.0,17.4,29.8,39.5,44.0,43.0,36.1,24.0,13.3,1.7),
   Record_High = c(48,43,54,60,66,72,71,72,69,62,52,47),
   Record_Low = c(-47,-46,-38,-20,-2,8,24,20,9,-5,-20,-46),
   stringsAsFactors = FALSE
)
a

###b)
summary(a)

###c)
data.frame(a$Month,a$Record_High,a$Record_Low)

###d)
a[c(length(1),length(a$Month)),]

###e)
subset(a,Daily_Max_Average>40)

###f)
a$Record_Deviation<- sd(c(a$Record_High,a$Record_Low))
